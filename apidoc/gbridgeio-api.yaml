openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Hosted gBridge.io API Server
    url: https://gbridge.kappelt.net/api/v2
info:
  version: "1.0.0"
  title: gBridge.io Management API
  description: >-
    **IMPORTANT**: *This API is yet in the beta phase. Please report any errors or issues in the community forum or under gbridge@kappelt.net*


    This document describes the management API used for gBridge.io management (device creation and editing, etc.)
  contact:
    email: gbridge@kappelt.net

security:
  - bearerAuth: []

paths:
  /auth/token:
    post:
      tags:
        - Authentication
      summary: Obtain an access token using an API key
      description: >
        Get an access token that allows access to all API resources. Therefore, you need an API key.

        The access token is only valid for a limited period.

        When making a request, the access token has to be included in the header "Authorization" in the format "Bearer {access-token}"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - apikey
              example:
                apikey: eGd6YWFUbzR0ZmlTV0hyeldmcExxQ0FkT0d4U29qYnpFUDQ1SGlBVzRxT0NXSU5aMXF0SGllSERSRnFJb2Y2N0xSU005RVlNYU9RMVpkR21lVzNCUXFmNHBYcm9hYjA2YVBBenA5d3dVbDZFbHJLa1FncEtHWUdyYnpWbU5LZmc=
              properties:
                apikey:
                  type: string
                  description: An API key you've created in your account's dashboard
                login_username:
                  type: string
                  description: This option is reserved for gBridge resellers
                password:
                  type: string
                  description: This option is reserved for gBridge resellers
      responses:
        '200':
          description: OK, your access token has been generated 
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvZGV2LmdicmlkZ2Uua2FwcGVsdC5uZXRcL2FwaVwvdjJcL2F1dGhcL3Rva2VuIiwiaWF0IjoxNTUzMzc4MDk1LCJleHAiOjE1NTMzODE2OTUsIm5iZiI6MTU1MzM3ODA5NSwianRpIjoiNWJhUTNsYkhONGlVbWhjcyIsInN1YiI6MiwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSIsInByaXZpbGVnZV91c2VyIjp0cnVlfQ.lILieBJTQo38z8BBJk0BtWJXN69j14MG_NYjjjCi5Eo
                  token_type: bearer
                  expires_in: 3600
                  privilege: standard,user
                properties:
                  access_token:
                    type: string
                    description: Your new access token
                  token_type:
                    type: string
                    description: Currently, the fixed value "bearer"
                  expires_in:
                    type: integer
                    description: The number of seconds this token is valid from the time of its creation on. Is usually 3600 seconds.
                  privilege:
                    type: string
                    description: The privileges that this access token has. Is currently either "standard" (access to most device-related endpoints) or "standard,user" (access to user password management, too)
        '401':
          description: >
            Wrong API Key
  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Invalidate the access token
      description: >
        Invalidate the access token you've specified in the "Auth" header.
      responses:
        '200':
          description: OK, your access token is now disabled
        '401':
          description: >
            The access token given in the headers is currently not valid
  /requestsync:
    get:
      summary: Request Google to sync your devices
      description: >
        This operation asks Google to resynchronize your devices, thus updating its cache and applying new changes


        It is the same as saying `Hey Google, synchronize my devices`

        
        You need to request to synchronize your devices after editing them (e.g. via this API).
      responses:
        '200':
          description: OK, update has been requested
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: >
            Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBasic'
  /device:
    get:
      tags:
        - Device
      summary: Get all created devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    device_id:
                      type: integer
                      description: This device's id
                    name:
                      type: string
                      description: Name of this device
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Device
      summary: Create a new device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Device'
                - type: object
                  required:
                    - name
                    - type
                    - traits
      responses:
        '201':
          description: OK, device has been created and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: >
            * Malformed JSON in request

            * Data validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBasic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /device/{device_id}:
    get:
      tags:
        - Device
      summary: Get the information about the specified device
      responses:
        '200':
          description: OK, resource has been sent
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Device'
                  - type: object
                    required:
                      - name
                      - type
                      - traits
        '400':
          description: >
            Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBasic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: >
            Device not found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorBasic'
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - device_not_found
      parameters:
        - name: device_id
          in: path
          description: Device ID
          required: true
          schema:
            type: integer
    patch:
      tags:
        - Device
      summary: Update an existing device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Device'
                - type: object
                  required: traits
      responses:
        '200':
          description: OK, resource has updated and sent back
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: >
            * Malformed JSON in request

            * Data validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBasic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: >
            Device not found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorBasic'
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - device_not_found
      parameters:
        - name: device_id
          in: path
          description: Device ID
          required: true
          schema:
            type: integer
    delete:
      tags:
        - Device
      summary: Delete the specified device
      responses:
        '204':
          description: OK, device has been deleted
        '400':
          description: >
            Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBasic'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: >
            Device not found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ErrorBasic'
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - device_not_found
      parameters:
        - name: device_id
          in: path
          description: Device ID
          required: true
          schema:
            type: integer
  /user:
    get:
      tags:
        - User
      summary: Get information about your user account
      description: Get information about your user account. This operation requires API authentication with the privilege "user"
      responses:
        '200':
          description: OK, resource has been sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: >
                      The user id of your account used in internal processing.

                      Please note that this is currently an integer number, but should be treated as a string. The user numbering scheme might be changed at some point, without prior notice.
                  displayName:
                    type: string
                    description: The current display name for your account. Is mainly used in communication (in emails etc.)
                  email:
                    type: string
                    description: Your account's email address
                  mqttUsername:
                    type: string
                    description: Username for the public MQTT server
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/password:
    post:
      tags:
        - User
      summary: Update your account's password
      description: Update your account's password. This operation requires API authentication with the privilege "user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  description: Your new account password. The password must be at least 8 characters long and must contain at least one number (0-9), letters, and at least one special char.
      responses:
        '200':
          description: OK, your password has been updated
        '400':
          description: Your password doesn't match the required criteria
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /user/mqtt/password:
    post:
      tags:
        - User
      summary: Update the password for the public MQTT server
      description: Update the password for the public MQTT server (mqtt.gbridge.io). This operation requires API authentication with the privilege "user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mqttPassword
              properties:
                mqttPassword:
                  type: string
                  description: Your new account password. The password must be at least 8 characters long (required) and should contain at least one number (0-9), letters, and at least one special char (optional).
      responses:
        '200':
          description: OK, your password has been updated
        '400':
          description: Your password doesn't match the required criteria
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  responses:
    UnauthorizedError:
      description: Authorization token is either missing, invalid, expired or has insufficient privileges
  schemas:
    ErrorBasic:
      type: object
      properties:
        error_code:
          type: string
          description: >
            Unique processable code for the error that has happened
          enum:
            - trait_type_unknown
            - trait_type_unspecified
            - traits_required
            - twofa_invalid_type
            - twofa_pin_code_required
            - device_invalid_type
            - device_invalid_id
            - device_not_found
            - device_name_required
            - password_weak
            - mqtt_topic_invalid
            - internal_error
            - generic
        error_message:
          type: string
          description: Human readable message of error that has been thrown
    TraitType:
      type: object
      properties:
        requiresActionTopic:
          type: boolean
          description: False, if this device does not support action topics (e.g. TempSet.Ambient)
          readOnly: true
        requiresStatusTopic:
          type: boolean
          description: False, if this device does not support status topics (e.g. Scenes)
          readOnly: true
      discriminator:
        propertyName: type
        mapping:
          OnOff: '#/components/schemas/TraitOnOff'
          Brightness: '#/components/schemas/TraitBrightness'
          Scene: '#/components/schemas/TraitScene'
          TempSet.Mode: '#/components/schemas/TraitTempSet.Mode'
          TempSet.Setpoint: '#/components/schemas/TraitTempSet.Setpoint'
          TempSet.Ambient: '#/components/schemas/TraitTempSet.Ambient'
          TempSet.Humidity: '#/components/schemas/TraitTempSet.Humidity'
          FanSpeed: '#/components/schemas/TraitFanSpeed'
          StartStop: '#/components/schemas/TraitStartStop'
          OpenClose: '#/components/schemas/TraitOpenClose'
          CameraStream: '#/components/schemas/TraitCameraStream'
      required: 
        - type
    TraitOnOff:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - OnOff
            actionTopic:
              type: string
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
              default: gBridge/u{user_id}/d{device_id}/onoff
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/onoff/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
    TraitBrightness:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - Brightness
            actionTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/brightness
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/brightness/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
    TraitScene:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - Scene
            actionTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/scene
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
    TraitTempSet.Mode:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - TempSet.Mode
            actionTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/tempset-mode
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/tempset-mode/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            modesSupported:
              type: array
              minItems: 1
              default:
                - off
                - heat
                - on
                - auto
              items:
                type: string
                enum: 
                  - off
                  - heat
                  - cool
                  - on
                  - auto
                  - fan-only
                  - purifier
                  - eco
                  - dry
                description: One or more available thermostat modes the device supports
    TraitTempSet.Setpoint:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - TempSet.Setpoint
            actionTopic:
              default: gBridge/u{user_id}/d{device_id}/tempset-setpoint
              type: string
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/tempset-setpoint/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
    TraitTempSet.Ambient:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - TempSet.Ambient
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/tempset-ambient/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
    TraitTempSet.Humidity:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - TempSet.Humidity
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/tempset-humidity/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            humiditySupported:
              type: boolean
              default: false
              description: Describes, whether this device actually supports the reporting of humidity.
    TraitFanSpeed:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - FanSpeed
            actionTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/fanspeed
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/fanspeed/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            fanSpeeds:
              description: All available fan speeds
              default:
                S1: 
                  - Speed 1
                  - Slow
                S2: 
                  - Speed 2
                  - Medium
                S3: 
                  - Speed 3
                  - Fast
              type: array
              items:
                type: object
                additionalProperties:
                  type: array
                  minItems: 1
                  items:
                    type: string
    TraitStartStop:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - StartStop
            actionTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/startstop
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/startstop/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
    TraitOpenClose:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
              type: string
              enum:
                - OpenClose
            actionTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/openclose
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/openclose/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
    TraitCameraStream:
      allOf:
        - $ref: '#/components/schemas/TraitType'
        - type: object
          properties:
            type:
                type: string
                enum:
                  - CameraStream
            actionTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/camerastream
              description: >
                Optional. Trait's action topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            statusTopic:
              type: string
              default: gBridge/u{user_id}/d{device_id}/camerastream/set
              description: >
                Optional. Trait's status topic. Can be prefixed with `gBridge/u{user_id}/` (but not necessary, is prepended by default)
            streamFormat:
              type: string
              description: Data/ Media format of stream
              default: progressive_mp4
              enum:
                - progressive_mp4
                - hls
                - dash
                - smooth_stream
            streamDefaultUrl:
              type: string
              nullable: true
              description: Default URL to use if no other one is sent via MQTT status topic
    Device:
      properties:
        id:
          type: integer
          readOnly: true
          description: Unique device id, assigned by gBridge
        name:
          type: string
          description: Human readable name, used for voice commands
        type:
          type: string
          enum:
            - Light
            - Outlet
            - Switch
            - Scene
            - Thermostat
            - Fan
            - AC
            - Purifier
            - Sprinkler
            - Door
            - Blinds
            - Shutter
            - Dishwasher
            - Dryer
            - Vacuum
            - Washer
            - Camera
        traits:
          type: array
          minItems: 1
          items:
            oneOf:
              - $ref: '#/components/schemas/TraitType'
          description: >
            Traits/ Features the device supports. Choose at least one.
             * Note: When using `TempSet.*`: These traits may only be specified in combination with each other. E.g., if you are using `TempSet.Mode`, you need to add `.Setpoint`, `.Ambient` and `.Humidity`, too.
        twofa:
          type: string
          nullable: true
          enum:
            - ack
            - pin
          description: Two-step confirmation or PIN-Code verification. `null` means no further confirmation is used.
        twofaPin:
          type: string
          nullable: true
          description: PIN code for two step authorization. Necessary if `twofa` is set to `pin`. The PIN code is usually a 4 to 8 digit number.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

externalDocs:
  url: https://doc.gbridge.io
  description: General gBridge documentation and user guides